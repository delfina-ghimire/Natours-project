.btn {
  &,
  &:link,
  &:visited {
    /*Pseudo-classes: these are used to style special states of a selector*/
    /* buttons are inline element by default */
    text-transform: uppercase;
    font-size: $default-font-size;
    text-decoration: none;
    padding: 1.5rem /*top & bottom*/ 4rem /*left & right */;
    display: inline-block;
    /* Inline Block Elements are treated as text and to center the text we use text-align: ceter; to it's parent element */
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;

    //Change for the <button> element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-3px);
    /*box-shadow: offset-x offset-y blurr(high blurr = looks farther from page & low blurr during acctive phase looks closer to the page) color*/
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      /* when we hover the button then we want certain style to happen to ::after state i.e this is ::after state of button:hover state */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-1px);
    /*Note: -1px is in relation to original state not wrt to hover state */
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  &::after {
    /* (1)after pseudo element adds like a virtual element right after element we are selecting & let's us style that element.
    (2) ::after is treated like child of element it is specified to*/
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* We always use transition property to initial state of element */
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-in 0.75s;
    animation-fill-mode: backwards;
    /* It automatically applies the styles of 0% before the animation starts*/
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(0);
  }
}

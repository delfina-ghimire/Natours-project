.form {
  //for margin-bottom except for last element
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    color: inherit;
    font-family: inherit; //browser don't inherit fonts in input element
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    border-bottom: 0.3rem solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    &::-webkit-input-placeholder {
      color: color-grey-dark-2;
    }

    //blue border we see on input element is outline property during focus state
    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 0.3rem solid $color-primary;
    }

    //we can use valid and invalid pseudo classes in our CSS and style accordingly
    //we want this to apply when field is focused i.e
    &:focus:invalid {
      border-bottom: 0.3rem solid $color-secondary-dark;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block; //otherwise we can't use box-model properties
    transition: all 0.3s;
  }

  //We want our label to appear only when we start filling out input, and this can be controlled by using placeholder shown property

  //whenever placeholder is shown on the input element we want to style lable
  //since input and label are sibling we can use either adjacent sibling selector(+) or sibling selector(~)
  //adjacent sibling selector selects first sibling right next to it
  &__input:placeholder-shown + &__label {
    opacity: 0; //because we can't animate visibility
    visibility: hidden; //it's gone from the page
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block; //to put them side by side
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    font-weight: 500;
    cursor: pointer;
    position: relative;
    padding-left: 5rem;
  }

  &__radio-button {
    //2D Circle
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.1rem;
    top: -0.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }
  //as soon as we hit the input element, the radio-input becomes checked, then we select the sibling of that one, and then the child because thats the want we want to change in it's after form
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
